// Generated by view binder compiler. Do not edit!
package com.cognitiveassistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cognitiveassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPatientProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText age;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final EditText patientId;

  @NonNull
  public final EditText patientName;

  @NonNull
  public final EditText phoneNumber;

  private ActivityPatientProfileBinding(@NonNull LinearLayout rootView, @NonNull EditText age,
      @NonNull Button nextButton, @NonNull EditText patientId, @NonNull EditText patientName,
      @NonNull EditText phoneNumber) {
    this.rootView = rootView;
    this.age = age;
    this.nextButton = nextButton;
    this.patientId = patientId;
    this.patientName = patientName;
    this.phoneNumber = phoneNumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPatientProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPatientProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_patient_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPatientProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.age;
      EditText age = ViewBindings.findChildViewById(rootView, id);
      if (age == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.patientId;
      EditText patientId = ViewBindings.findChildViewById(rootView, id);
      if (patientId == null) {
        break missingId;
      }

      id = R.id.patientName;
      EditText patientName = ViewBindings.findChildViewById(rootView, id);
      if (patientName == null) {
        break missingId;
      }

      id = R.id.phoneNumber;
      EditText phoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumber == null) {
        break missingId;
      }

      return new ActivityPatientProfileBinding((LinearLayout) rootView, age, nextButton, patientId,
          patientName, phoneNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
