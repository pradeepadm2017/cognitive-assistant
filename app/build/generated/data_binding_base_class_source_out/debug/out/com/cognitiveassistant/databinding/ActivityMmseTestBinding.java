// Generated by view binder compiler. Do not edit!
package com.cognitiveassistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cognitiveassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMmseTestBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioGroup answerGroup;

  @NonNull
  public final TextView debugText;

  @NonNull
  public final EditText fallbackInput;

  @NonNull
  public final Button listenButton;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final TextView questionText;

  @NonNull
  public final TextView questionTitle;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final Button submitButton;

  @NonNull
  public final Button submitTypedButton;

  private ActivityMmseTestBinding(@NonNull LinearLayout rootView, @NonNull RadioGroup answerGroup,
      @NonNull TextView debugText, @NonNull EditText fallbackInput, @NonNull Button listenButton,
      @NonNull Button nextButton, @NonNull TextView questionText, @NonNull TextView questionTitle,
      @NonNull TextView statusText, @NonNull Button submitButton,
      @NonNull Button submitTypedButton) {
    this.rootView = rootView;
    this.answerGroup = answerGroup;
    this.debugText = debugText;
    this.fallbackInput = fallbackInput;
    this.listenButton = listenButton;
    this.nextButton = nextButton;
    this.questionText = questionText;
    this.questionTitle = questionTitle;
    this.statusText = statusText;
    this.submitButton = submitButton;
    this.submitTypedButton = submitTypedButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMmseTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMmseTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mmse_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMmseTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answerGroup;
      RadioGroup answerGroup = ViewBindings.findChildViewById(rootView, id);
      if (answerGroup == null) {
        break missingId;
      }

      id = R.id.debugText;
      TextView debugText = ViewBindings.findChildViewById(rootView, id);
      if (debugText == null) {
        break missingId;
      }

      id = R.id.fallbackInput;
      EditText fallbackInput = ViewBindings.findChildViewById(rootView, id);
      if (fallbackInput == null) {
        break missingId;
      }

      id = R.id.listenButton;
      Button listenButton = ViewBindings.findChildViewById(rootView, id);
      if (listenButton == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.questionText;
      TextView questionText = ViewBindings.findChildViewById(rootView, id);
      if (questionText == null) {
        break missingId;
      }

      id = R.id.questionTitle;
      TextView questionTitle = ViewBindings.findChildViewById(rootView, id);
      if (questionTitle == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.submitButton;
      Button submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.submitTypedButton;
      Button submitTypedButton = ViewBindings.findChildViewById(rootView, id);
      if (submitTypedButton == null) {
        break missingId;
      }

      return new ActivityMmseTestBinding((LinearLayout) rootView, answerGroup, debugText,
          fallbackInput, listenButton, nextButton, questionText, questionTitle, statusText,
          submitButton, submitTypedButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
